name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        container:
          image: node:20
        name: Unit Testing
        runs-on: ubuntu-latest

        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          continue-on-error: true
 
        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          if: always()
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      name: code-coverage
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version
        uses: actions/setup-node@v3
        with:
          node-version: 18
  
      - name: Install Dependencies
        run: npm install
  
      - name: code-coverage
        run: npm run coverage
        continue-on-error: true
      - name: Archive Test Result
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5

    docker:
        name: Build Docker Image
        permissions:
          packages: write
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest

        steps:
          
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: GitHub Container Registry Login
          uses: docker/login-action@v2.2.0
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Build Docker Image
          uses: docker/build-push-action@v4
          with:
            context: .
            push: false
            tags: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}

        - name: Push Docker Image to GitHub Container Registry
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}

    dev-deploy:
      name: dev-deploy
      if: contains(github.ref, 'feature/')
      needs: [docker]
      environment:
        name: development
        url: https://dev.company.com
      outputs:
        URL: ${{ steps.get-ingress-url.outputs.APP_INGRESS_HOST }}
      runs-on: ubuntu-latest

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4.1.7

        - name: Install kubectl
          uses: azure/setup-kubectl@v4.0.0
          with:
            version: 'v1.26.0'

        - name: Set Kubecfg File
          uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}
        
        - name: Fetch kubectl version
          run: | 
            kubectl version --short -o yaml

        - name: Save Ingress IP as a GitHub Environment Variable
          run: |
            echo "INGRESS_IP=$(kubectl get svc -n ingress-nginx ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV

        - name: Replace Token in Manifest Files
          uses: cschleiden/replace-tokens@v1.3
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: '["kubernetes/development/*.yaml"]'
          env:
            NAMESPACE: ${{ vars.NAMESPACE }}
            REPLICAS: ${{ vars.REPLICAS }}
            IMAGE:  ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
            INGRESS_IP: ${{ env.INGRESS_IP }}

        - name: Check the manifest files
          run: |
            cat kubernetes/development/*.yaml
        
